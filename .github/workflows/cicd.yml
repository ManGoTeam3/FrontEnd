name: Node.js CI/CD with GCP Cloud Run and Artifact Registry

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - "develop"
      - "main"

env:
  PROJECT_ID: "poetic-inkwell-401203" # TODO: update Google Cloud project id
  GAR_LOCATION: "asia-northeast3" # TODO: update Artifact Registry location
  SERVICE: "durianhub" # TODO: update Artifact Registry service name
  DEPLOYMENT: "durian" # TODO: update Cloud Run deployment name
  REGION: "us-central1" # TODO: update Cloud Run service region

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    name: Node ${{ matrix.node-version }} sample
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install

      #ESLint 경고 무시
      - name: Build
        run: npm run build --no-verify

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      ## Project JDK 17 Setting
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com
          #credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Set gcloud project
        run: gcloud config set project ${{ env.PROJECT_ID }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: "poetic-inkwell-401203"
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          docker login -u oauth2accesstoken --password-stdin https://${{ env.REGION }}-docker.pkg.dev  <<< $ACCESS_TOKEN
          docker build -t "asia-northeast3-docker.pkg.dev/poetic-inkwell-401203/${{ env.SERVICE }}/durian-front:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/durian-front:${{ github.sha }}"
        # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.DEPLOYMENT }}
          #region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/durian-front:${{ github.sha }}"

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
